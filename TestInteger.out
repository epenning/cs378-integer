==1705== Memcheck, a memory error detector
==1705== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==1705== Using Valgrind-3.10.0.SVN and LibVEX; rerun with -h for copyright info
==1705== Command: ./TestInteger
==1705== 
Running main() from gtest_main.cc
[==========] Running 44 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 44 tests from IntegerFixture
[ RUN      ] IntegerFixture.shift_left_1
[       OK ] IntegerFixture.shift_left_1 (21 ms)
[ RUN      ] IntegerFixture.shift_left_2
[       OK ] IntegerFixture.shift_left_2 (4 ms)
[ RUN      ] IntegerFixture.shift_left_3
[       OK ] IntegerFixture.shift_left_3 (4 ms)
[ RUN      ] IntegerFixture.shift_right_1
[       OK ] IntegerFixture.shift_right_1 (6 ms)
[ RUN      ] IntegerFixture.shift_right_2
[       OK ] IntegerFixture.shift_right_2 (3 ms)
[ RUN      ] IntegerFixture.shift_right_3
[       OK ] IntegerFixture.shift_right_3 (4 ms)
[ RUN      ] IntegerFixture.plus_digits_1
[       OK ] IntegerFixture.plus_digits_1 (31 ms)
[ RUN      ] IntegerFixture.plus_digits_2
[       OK ] IntegerFixture.plus_digits_2 (4 ms)
[ RUN      ] IntegerFixture.plus_digits_3
[       OK ] IntegerFixture.plus_digits_3 (7 ms)
[ RUN      ] IntegerFixture.plus_digits_4
[       OK ] IntegerFixture.plus_digits_4 (6 ms)
[ RUN      ] IntegerFixture.plus_digits_5
[       OK ] IntegerFixture.plus_digits_5 (6 ms)
[ RUN      ] IntegerFixture.minus_digits_1
[       OK ] IntegerFixture.minus_digits_1 (14 ms)
[ RUN      ] IntegerFixture.minus_digits_2
[       OK ] IntegerFixture.minus_digits_2 (4 ms)
[ RUN      ] IntegerFixture.minus_digits_3
[       OK ] IntegerFixture.minus_digits_3 (6 ms)
[ RUN      ] IntegerFixture.minus_digits_4
[       OK ] IntegerFixture.minus_digits_4 (5 ms)
[ RUN      ] IntegerFixture.minus_digits_5
[       OK ] IntegerFixture.minus_digits_5 (6 ms)
[ RUN      ] IntegerFixture.multiplies_digits_1
[       OK ] IntegerFixture.multiplies_digits_1 (21 ms)
[ RUN      ] IntegerFixture.multiplies_digits_2
[       OK ] IntegerFixture.multiplies_digits_2 (8 ms)
[ RUN      ] IntegerFixture.multiplies_digits_3
[       OK ] IntegerFixture.multiplies_digits_3 (9 ms)
[ RUN      ] IntegerFixture.multiplies_digits_4
[       OK ] IntegerFixture.multiplies_digits_4 (8 ms)
[ RUN      ] IntegerFixture.multiplies_digits_5
[       OK ] IntegerFixture.multiplies_digits_5 (8 ms)
[ RUN      ] IntegerFixture.divides_digits_1
Writing 8 to x
Writing 7 to x
Writing 6 to x
Writing 3 to x
Writing 8 to x
TestInteger.c++:274: Failure
Value of: equal(out.begin(), out.end(), test.begin())
  Actual: false
Expected: true
[  FAILED  ] IntegerFixture.divides_digits_1 (28 ms)
[ RUN      ] IntegerFixture.divides_digits_2
Writing 8 to x
Writing 7 to x
Writing 6 to x
Writing 3 to x
Writing 8 to x
TestInteger.c++:283: Failure
Value of: out.end()
  Actual: 8-byte object <74-B6 C8-05 00-00 00-00>
Expected: itr
Which is: 8-byte object <70-B6 C8-05 00-00 00-00>
[  FAILED  ] IntegerFixture.divides_digits_2 (24 ms)
[ RUN      ] IntegerFixture.divides_digits_3
Writing 1 to x
Writing 2 to x
Writing 2 to x
Writing 7 to x
Writing 8 to x
TestInteger.c++:293: Failure
Value of: equal(out.begin(), out.end(), test.begin())
  Actual: false
Expected: true
[  FAILED  ] IntegerFixture.divides_digits_3 (6 ms)
[ RUN      ] IntegerFixture.divides_digits_4
==1705== Invalid write of size 4
==1705==    at 0x40F6BC: __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > minus_digits<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x40FE61: __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > divides_digits<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x40B706: IntegerFixture_divides_digits_4_Test::TestBody() (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x436D22: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x42973C: testing::Test::Run() (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x4297D3: testing::TestInfo::Run() (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x4298D4: testing::TestCase::Run() (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x429B4C: testing::internal::UnitTestImpl::RunAllTests() (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x429E2D: testing::UnitTest::Run() (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x404AAF: main (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==  Address 0x5c91fd0 is 0 bytes after a block of size 16 alloc'd
==1705==    at 0x4C2B0E0: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1705==    by 0x411F13: __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x411200: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x4126A1: void std::vector<int, std::allocator<int> >::_M_range_initialize<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, std::forward_iterator_tag) (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x411BB6: void std::vector<int, std::allocator<int> >::_M_initialize_dispatch<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, std::__false_type) (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x410B7D: std::vector<int, std::allocator<int> >::vector<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, void>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, std::allocator<int> const&) (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x40FDC1: __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > divides_digits<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x40B706: IntegerFixture_divides_digits_4_Test::TestBody() (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x436D22: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x42973C: testing::Test::Run() (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x4297D3: testing::TestInfo::Run() (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x4298D4: testing::TestCase::Run() (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705== 
Writing 6 to x
Writing 6 to x
Writing 6 to x
Writing 6 to x
==1705== Invalid read of size 4
==1705==    at 0x40FE84: __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > divides_digits<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x40B706: IntegerFixture_divides_digits_4_Test::TestBody() (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x436D22: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x42973C: testing::Test::Run() (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x4297D3: testing::TestInfo::Run() (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x4298D4: testing::TestCase::Run() (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x429B4C: testing::internal::UnitTestImpl::RunAllTests() (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x429E2D: testing::UnitTest::Run() (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x404AAF: main (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==  Address 0x5c91fd0 is 0 bytes after a block of size 16 alloc'd
==1705==    at 0x4C2B0E0: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1705==    by 0x411F13: __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x411200: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x4126A1: void std::vector<int, std::allocator<int> >::_M_range_initialize<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, std::forward_iterator_tag) (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x411BB6: void std::vector<int, std::allocator<int> >::_M_initialize_dispatch<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, std::__false_type) (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x410B7D: std::vector<int, std::allocator<int> >::vector<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, void>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, std::allocator<int> const&) (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x40FDC1: __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > divides_digits<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x40B706: IntegerFixture_divides_digits_4_Test::TestBody() (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x436D22: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x42973C: testing::Test::Run() (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x4297D3: testing::TestInfo::Run() (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705==    by 0x4298D4: testing::TestCase::Run() (in /v/filer4b/v38q001/epenning/CS_378/cs378-integer/TestInteger)
==1705== 
Writing 1 to x
TestInteger.c++:305: Failure
Value of: out.end()
  Actual: 8-byte object <24-1F C9-05 00-00 00-00>
Expected: itr
Which is: 8-byte object <20-1F C9-05 00-00 00-00>
[  FAILED  ] IntegerFixture.divides_digits_4 (8 ms)
[ RUN      ] IntegerFixture.divides_digits_5
Writing 9 to x
Writing 9 to x
Writing 3 to x
Writing 6 to x
Writing 2 to x
Writing 0 to x
Writing 3 to x
[       OK ] IntegerFixture.divides_digits_5 (6 ms)
[ RUN      ] IntegerFixture.equals_1
[       OK ] IntegerFixture.equals_1 (11 ms)
[ RUN      ] IntegerFixture.less_than_1
[       OK ] IntegerFixture.less_than_1 (1 ms)
[ RUN      ] IntegerFixture.out_1
[       OK ] IntegerFixture.out_1 (1 ms)
[ RUN      ] IntegerFixture.valid_1
[       OK ] IntegerFixture.valid_1 (1 ms)
[ RUN      ] IntegerFixture.constructor_int_1
[       OK ] IntegerFixture.constructor_int_1 (5 ms)
[ RUN      ] IntegerFixture.constructor_int_2
[       OK ] IntegerFixture.constructor_int_2 (3 ms)
[ RUN      ] IntegerFixture.constructor_int_3
[       OK ] IntegerFixture.constructor_int_3 (2 ms)
[ RUN      ] IntegerFixture.constructor_string_1
[       OK ] IntegerFixture.constructor_string_1 (0 ms)
[ RUN      ] IntegerFixture.negation_1
[       OK ] IntegerFixture.negation_1 (0 ms)
[ RUN      ] IntegerFixture.plus_equal_1
[       OK ] IntegerFixture.plus_equal_1 (0 ms)
[ RUN      ] IntegerFixture.minus_equal_1
[       OK ] IntegerFixture.minus_equal_1 (1 ms)
[ RUN      ] IntegerFixture.multi_equal_1
[       OK ] IntegerFixture.multi_equal_1 (1 ms)
[ RUN      ] IntegerFixture.divide_equal_1
[       OK ] IntegerFixture.divide_equal_1 (1 ms)
[ RUN      ] IntegerFixture.mod_equal_1
[       OK ] IntegerFixture.mod_equal_1 (1 ms)
[ RUN      ] IntegerFixture.left_shift_equal_1
[       OK ] IntegerFixture.left_shift_equal_1 (1 ms)
[ RUN      ] IntegerFixture.right_shift_equal_1
[       OK ] IntegerFixture.right_shift_equal_1 (1 ms)
[ RUN      ] IntegerFixture.abs_1
[       OK ] IntegerFixture.abs_1 (1 ms)
[ RUN      ] IntegerFixture.pow_1
[       OK ] IntegerFixture.pow_1 (1 ms)
[----------] 44 tests from IntegerFixture (300 ms total)

[----------] Global test environment tear-down
[==========] 44 tests from 1 test case ran. (329 ms total)
[  PASSED  ] 40 tests.
[  FAILED  ] 4 tests, listed below:
[  FAILED  ] IntegerFixture.divides_digits_1
[  FAILED  ] IntegerFixture.divides_digits_2
[  FAILED  ] IntegerFixture.divides_digits_3
[  FAILED  ] IntegerFixture.divides_digits_4

 4 FAILED TESTS
==1705== 
==1705== HEAP SUMMARY:
==1705==     in use at exit: 0 bytes in 0 blocks
==1705==   total heap usage: 2,182 allocs, 2,182 frees, 268,222 bytes allocated
==1705== 
==1705== All heap blocks were freed -- no leaks are possible
==1705== 
==1705== For counts of detected and suppressed errors, rerun with: -v
==1705== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
